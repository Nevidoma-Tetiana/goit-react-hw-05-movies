{"version":3,"file":"static/js/494.866e8e14.chunk.js","mappings":"qSAKMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAHc,gCAIdC,OAAQ,CAAEC,QALI,sCAQHC,EAAW,mCAAG,sGACFL,EAASM,IAAI,uBADX,uBACjBC,EADiB,EACjBA,KADiB,kBAElBA,EAAKC,SAFa,2CAAH,qDAKXC,EAAW,mCAAG,WAAMC,GAAN,yFACFV,EAASM,IAAI,eAAgB,CAClDH,OAAQ,CACNO,MAAAA,KAHqB,uBACjBH,EADiB,EACjBA,KADiB,kBAMlBA,EAAKC,SANa,2CAAH,sDASXG,EAAe,mCAAG,WAAMC,GAAN,yFACNZ,EAASM,IAAT,gBAAsBM,IADhB,uBACrBL,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfM,EAAe,mCAAG,WAAMD,GAAN,yFACNZ,EAASM,IAAT,gBAAsBM,EAAtB,aADM,uBACrBL,EADqB,EACrBA,KADqB,kBAEtBA,EAAKO,MAFiB,2CAAH,sDAKfC,EAAe,mCAAG,WAAMH,GAAN,yFACNZ,EAASM,IAAT,gBAAsBM,EAAtB,aADM,uBACrBL,EADqB,EACrBA,KADqB,kBAEtBA,EAAKC,SAFiB,2CAAH,qD,sDClCrB,IAAMQ,EAAY,SAAAC,GAAG,OAC1BA,EAAG,yCACmCA,GAClC,gFAHsB,C,sKCcb,SAASC,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAcjB,IAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,8GAEIlB,EAAAA,EAAAA,IAAgBQ,GAFpB,OAEVK,EAFU,OAGhBC,EAASD,GAHO,gDAKhBM,QAAQC,IAAR,MALgB,yDAAH,qDAQjBF,GACD,GAAE,CAACV,KAECK,EACH,OAAO,KAGT,IAAQQ,EAAuDR,EAAvDQ,OAAQC,EAA+CT,EAA/CS,SAAUC,EAAqCV,EAArCU,aAAcC,EAAuBX,EAAvBW,MAAOC,EAAgBZ,EAAhBY,YACzCC,EAAU,OAAGL,QAAH,IAAGA,OAAH,EAAGA,EAAQM,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MAEzD,OACE,kBAAMC,UAAU,gBAAhB,WACE,mBACEA,UAAU,UACVC,QAAS,WAAO,IAAD,IACbtB,EAAQ,oBAACK,EAASkB,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,QAClC,EAJH,sBAQA,iBAAKH,UAAU,UAAf,WACE,gBAAKI,MAAM,MAAMC,KAAK/B,EAAAA,EAAAA,GAAUoB,GAAcY,IAAKb,KACnD,iBAAKO,UAAU,UAAf,WACE,wBAAKP,KACL,yCAAgC,GAAfD,GAAmBe,UAApC,SACA,sCACA,uBAAIhB,KACJ,oCACA,uBAAII,WAGR,oDACA,iBAAKK,UAAU,UAAf,WACE,SAAC,KAAD,CAASA,UAAU,UAAUQ,GAAG,OAAhC,mBAGA,SAAC,KAAD,CAASR,UAAU,UAAUQ,GAAG,UAAhC,yBAIF,SAAC,EAAAC,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C","sources":["Api/Api.js","Api/getPoster.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst api_key = '339c4970f6f5303b0e27671505cfa5b0';\nconst baseURL = 'https://api.themoviedb.org/3/';\n\nconst instance = axios.create({\n  baseURL,\n  params: { api_key },\n});\n\nexport const getTrending = async () => {\n  const { data } = await instance.get('trending/movie/week');\n  return data.results;\n};\n\nexport const searchMovie = async query => {\n  const { data } = await instance.get('search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await instance.get(`movie/${id}`);\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`movie/${id}/reviews`);\n  return data.results;\n};\n","export const getPoster = url =>\n  url\n    ? `https://image.tmdb.org/t/p/w300${url}`\n    : 'https://img.freepik.com/free-vector/images-concept-illustration_114360-218.jpg';\n","import {\n  Outlet,\n  useParams,\n  useNavigate,\n  useLocation,\n  NavLink,\n} from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieDetails } from '../../Api/Api';\nimport { Suspense } from 'react';\nimport '../../components/SharedLayout/SharedLayout.css';\nimport { getPoster } from '../../Api/getPoster';\nimport './MovieDetails.css';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const movie = await getMovieDetails(movieId);\n        setMovie(movie);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchMovies();\n  }, [movieId]);\n\n  if (!movie) {\n    return null;\n  }\n\n  const { genres, overview, vote_average, title, poster_path } = movie;\n  const genresList = genres?.map(genre => genre.name).join(', ');\n\n  return (\n    <main className=\"containerMain\">\n      <button\n        className=\"homeBtn\"\n        onClick={() => {\n          navigate(location.state?.from ?? '/home');\n        }}\n      >\n        Go back\n      </button>\n      <div className=\"wrapper\">\n        <img width=\"250\" src={getPoster(poster_path)} alt={title} />\n        <div className=\"details\">\n          <h2>{title}</h2>\n          <p>User Score: {(vote_average * 10).toFixed()} %</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h4>Genres</h4>\n          <p>{genresList}</p>\n        </div>\n      </div>\n      <h3>Additional information</h3>\n      <div className=\"wrapper\">\n        <NavLink className=\"navLink\" to=\"cast\">\n          Cast\n        </NavLink>\n        <NavLink className=\"navLink\" to=\"reviews\">\n          Reviews\n        </NavLink>\n      </div>\n      <Suspense fallback={<div>...Loading</div>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n}\n"],"names":["instance","axios","baseURL","params","api_key","getTrending","get","data","results","searchMovie","query","getMovieDetails","id","getMovieCredits","cast","getMovieReviews","getPoster","url","MovieDetails","movieId","useParams","navigate","useNavigate","useState","movie","setMovie","location","useLocation","useEffect","fetchMovies","console","log","genres","overview","vote_average","title","poster_path","genresList","map","genre","name","join","className","onClick","state","from","width","src","alt","toFixed","to","Suspense","fallback"],"sourceRoot":""}