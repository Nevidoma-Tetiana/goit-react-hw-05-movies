{"version":3,"file":"static/js/871.317be15f.chunk.js","mappings":"qSAKMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAHc,gCAIdC,OAAQ,CAAEC,QALI,qCAQHC,EAAW,mCAAG,sGACFL,EAASM,IAAI,uBADX,uBACjBC,EADiB,EACjBA,KADiB,kBAElBA,EAAKC,SAFa,2CAAH,qDAKXC,EAAW,mCAAG,WAAMC,GAAN,yFACFV,EAASM,IAAI,eAAgB,CAClDH,OAAQ,CACNO,MAAAA,KAHqB,uBACjBH,EADiB,EACjBA,KADiB,kBAMlBA,EAAKC,SANa,2CAAH,sDASXG,EAAe,mCAAG,WAAMC,GAAN,yFACNZ,EAASM,IAAT,gBAAsBM,IADhB,uBACrBL,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfM,EAAe,mCAAG,WAAMD,GAAN,yFACNZ,EAASM,IAAT,gBAAsBM,EAAtB,aADM,uBACrBL,EADqB,EACrBA,KADqB,kBAEtBA,EAAKO,MAFiB,2CAAH,sDAKfC,EAAe,mCAAG,WAAMH,GAAN,yFACNZ,EAASM,IAAT,gBAAsBM,EAAtB,aADM,uBACrBL,EADqB,EACrBA,KADqB,kBAEtBA,EAAKC,SAFiB,2CAAH,qD,8IC7Bb,SAASQ,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,8GAEMR,EAAAA,EAAAA,IAAgBE,GAFtB,OAEVG,EAFU,OAGhBC,EAAWD,GAHK,gDAKhBI,QAAQC,IAAR,MALgB,yDAAH,qDAQjBF,GACD,GAAE,CAACN,KAGF,eAAIS,UAAU,cAAd,SACsB,IAAnBN,EAAQO,QACP,oEAEAP,EAAQQ,KAAI,YAA8B,IAA3BhB,EAA0B,EAA1BA,GAAIiB,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzB,OACE,2BACE,qCAAaD,MACb,6BAAKC,OAFElB,EAKZ,KAIR,C","sources":["Api/Api.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst api_key = '4f606ab36fa7bf868ad1de218dc7286';\nconst baseURL = 'https://api.themoviedb.org/3/';\n\nconst instance = axios.create({\n  baseURL,\n  params: { api_key },\n});\n\nexport const getTrending = async () => {\n  const { data } = await instance.get('trending/movie/week');\n  return data.results;\n};\n\nexport const searchMovie = async query => {\n  const { data } = await instance.get('search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await instance.get(`movie/${id}`);\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`movie/${id}/reviews`);\n  return data.results;\n};\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieReviews } from '../../Api/Api';\nimport './Reviews.css';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const reviews = await getMovieReviews(movieId);\n        setReviews(reviews);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchMovies();\n  }, [movieId]);\n\n  return (\n    <ul className=\"rewievsList\">\n      {reviews.length === 0 ? (\n        <p>We don't have any reviews for this movie</p>\n      ) : (\n        reviews.map(({ id, author, content }) => {\n          return (\n            <li key={id}>\n              <h3>Author: {author}</h3>\n              <p> {content}</p>\n            </li>\n          );\n        })\n      )}\n    </ul>\n  );\n}\n"],"names":["instance","axios","baseURL","params","api_key","getTrending","get","data","results","searchMovie","query","getMovieDetails","id","getMovieCredits","cast","getMovieReviews","Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","fetchMovies","console","log","className","length","map","author","content"],"sourceRoot":""}